{"version":3,"sources":["Title.js","photos.js","photowall.js","addphoto.js","Main.js","index.js"],"names":["Title","props","title","Photos","post","posts","className","src","imageLink","alt","description","onClick","onRemovePhoto","Photowall","to","sort","x","y","id","map","index","AddPhoto","handleSubmit","bind","event","preventDefault","imgUrl","target","elements","Link","value","imgCaption","Caption","Number","Date","this","onAddPhoto","onSubmit","type","placeholder","name","Component","Main","state","removePhoto","postRemoved","console","log","setState","filter","postSubmitted","concat","prevProps","prevState","exact","path","render","onNavigate","navigate","history","addedPost","addPhoto","push","ReactDOM","document","getElementById"],"mappings":"6MAsBeA,MAff,SAAeC,GACX,OAAO,mCAAMA,EAAMC,UCkBRC,MAtBf,SAAgBF,GACZ,IAAMG,EAAOH,EAAMI,MACnB,OAAO,yBAAQC,UAAY,SAApB,UACK,qBAAKA,UAAY,QAAQC,IAAOH,EAAKI,UAAWC,IAAOL,EAAKM,cAC5D,2CAAa,kCAAKN,EAAKM,YAAV,OAAb,OACA,qBAAKJ,UAAY,mBAAjB,SACA,wBAAQK,QAAY,WAChBV,EAAMW,cAAcR,IADxB,6B,OCoBDS,MAvBf,SAAmBZ,GACX,OAAO,gCACK,cAAC,IAAD,CAAMK,UAAa,UAAWQ,GAAK,cAEnC,qBAAKR,UAAY,YAAjB,SACKL,EAAMI,MACNU,MAAK,SAASC,EAAEC,GACb,OAAOA,EAAEC,GAAKF,EAAEE,MAEnBC,KAAI,SAACd,EAAOe,GAAR,OAAkB,cAAC,EAAD,CAAsBf,MAASA,EAAOO,cAAiBX,EAAMW,eAA9CQ,YC6B/CC,E,kDAxCX,aAAc,IAAD,8BACT,gBACKC,aAAe,EAAKA,aAAaC,KAAlB,gBAFX,E,yDASAC,GACTA,EAAMC,iBACN,IAAMC,EAASF,EAAMG,OAAOC,SAASC,KAAKC,MACpCC,EAAaP,EAAMG,OAAOC,SAASI,QAAQF,MAC3C1B,EAAO,CACTc,GAAKe,OAAO,IAAIC,MAChBxB,YAAcqB,EACdvB,UAAakB,GAEbK,GAAcL,GACdS,KAAKlC,MAAMmC,WAAWhC,K,+BAM1B,OACA,gCACI,sDACA,qBAAKE,UAAW,OAAhB,SACI,uBAAM+B,SAAUF,KAAKb,aAArB,UACI,uBAAOgB,KAAO,OAAOC,YAAc,OAAOC,KAAM,SAChD,uBAAOF,KAAO,OAAOC,YAAc,SAASC,KAAK,YACjD,sD,GAnCGC,a,OCkFRC,E,kDAzEX,aAAc,IAAD,8BACT,gBACKC,MAAS,CACVtC,MAAQ,CACJ,CACAa,GAAI,EACJR,YAAa,OACbF,UAAW,oKAAqL,CAChMU,GAAI,EACJR,YAAa,OACbF,UAAW,oKACR,CACHU,GAAI,EACJR,YAAa,uBACbF,UAAW,sKAIvB,EAAKoC,YAAe,EAAKA,YAAYrB,KAAjB,gBAlBP,E,wDAuBDsB,GACRC,QAAQC,IAAIF,EAAYnC,aACxByB,KAAKa,UAAS,SAACL,GAAD,MAAY,CACtBtC,MAAOsC,EAAMtC,MAAM4C,QAAO,SAAA7C,GAAI,OAAIA,IAASyC,W,+BAM1CK,GACLf,KAAKa,UAAS,SAAAL,GAAK,MAAK,CACpBtC,MAAOsC,EAAMtC,MAAM8C,OAAO,CAACD,U,yCAMhBE,EAAWC,GAC1BP,QAAQC,IAAIM,EAAUhD,OACtByC,QAAQC,IAAIZ,KAAKQ,S,+BAMZ,IAAD,OACJ,OACI,gCACI,cAAC,IAAD,CAAOW,OAAK,EAACC,KAAO,IAAIC,OAAU,kBAC9B,gCACI,cAAC,EAAD,CAAOtD,MAAS,cAChB,cAAC,EAAD,CAAWG,MAAS,EAAKsC,MAAMtC,MAAOO,cAAiB,EAAKgC,YAAaa,WAAc,EAAKC,iBAKpG,cAAC,IAAD,CAAOH,KAAM,YAAYC,OAAU,gBAAEG,EAAF,EAAEA,QAAF,OAC/B,cAAC,EAAD,CAAUvB,WAAc,SAACwB,GACrB,EAAKC,SAASD,GACdD,EAAQG,KAAK,kB,GAhElBrB,a,MCHnBsB,IAASP,OAAO,cAAC,IAAD,UAAe,cAAC,EAAD,MAAyBQ,SAASC,eAAe,W","file":"static/js/main.7afabb88.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\n\r\n\r\n/*implemmenting title as a stateless function*/\r\n\r\nfunction Title(props){\r\n    return <h1> {props.title}</h1>\r\n}\r\n\r\n/* Using classes */\r\n\r\n\r\n/*\r\nclass Title extends Component{\r\n    render(){\r\n        return <h1> {this.props.title} </h1> \r\n    }\r\n}\r\n*/\r\n\r\nexport default Title","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* implementing the photos as a stateless function*/\r\nfunction Photos(props){\r\n    const post = props.posts\r\n    return <figure className = \"figure\"> \r\n                <img className = \"photo\" src = {post.imageLink} alt = {post.description} />\r\n                <figcaption> <p> {post.description} </p> </figcaption>\r\n                <div className = \"button-container\">\r\n                <button onClick = { () => {\r\n                    props.onRemovePhoto(post)\r\n                }}> Remove  </button>\r\n                </div>\r\n            </figure>\r\n};\r\n\r\n//Assigning a prop type \r\n\r\nPhotos.propTypes = {\r\n    post : PropTypes.array.isRequired,\r\n    onRemovePhoto : PropTypes.func.isRequired\r\n};\r\n\r\n\r\n\r\nexport default Photos","import React, { Component } from  'react';\r\nimport Photos from './photos';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom'\r\n/* implementing Photowall using stateless function */\r\n\r\n\r\nfunction Photowall(props){ \r\n        return <div>\r\n                    <Link className =  \"addIcon\"  to = \"/AddPhoto\"></Link>\r\n                    {/*<button onClick = {props.onNavigate} className = \"addIcon\"></button> */}\r\n                    <div className = \"photoGrid\">  \r\n                        {props.posts\r\n                        .sort(function(x,y)   {\r\n                            return y.id - x.id \r\n                        })\r\n                        .map((posts, index) => <Photos key = {index} posts = {posts} onRemovePhoto = {props.onRemovePhoto}  />)}\r\n                    </div>\r\n                </div>\r\n};\r\n\r\n\r\n//Prop types maintains a log of all the props used and their correct types and flags in case of an error\r\n//.isRequired mandates a types \r\n\r\nPhotowall.propTypes = {\r\n    posts: PropTypes.array.isRequired,\r\n    onRemovePhoto : PropTypes.func.isRequired\r\n};\r\n\r\nexport default Photowall","import React, { Component } from 'react';\r\n\r\nclass AddPhoto extends Component {\r\n\r\n    //initializing \r\n    constructor(){\r\n        super()\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    //handle onSubmit event\r\n    //takes in the link from the submit event \r\n    //takes in the caption from the submit event \r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const imgUrl = event.target.elements.Link.value;\r\n        const imgCaption = event.target.elements.Caption.value;\r\n        const post = {\r\n            id : Number(new Date()),\r\n            description : imgCaption,\r\n            imageLink  : imgUrl,\r\n        };\r\n        if (imgCaption && imgUrl){\r\n            this.props.onAddPhoto(post)\r\n        }\r\n    }\r\n\r\n    //render the image upload form \r\n    render(){\r\n        return  (\r\n        <div>\r\n            <h1> Upload a new photo </h1>\r\n            <div className =\"form\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input type = \"text\" placeholder = \"Link\" name= \"Link\"/>\r\n                    <input type = \"text\" placeholder = \"Cation\" name=\"Caption\"/>\r\n                    <button>Post</button>\r\n                </form>\r\n            </div>    \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPhoto ","import React, {Component} from 'react' \r\nimport Title from './Title'\r\nimport Photowall from './photowall'\r\nimport AddPhoto from './addphoto'\r\nimport {Route} from 'react-router-dom'\r\n\r\n   \r\n\r\n\r\nclass Main extends Component {\r\n    /*providing a connstructor method  for state updation*/\r\n    constructor(){\r\n        super()\r\n        this.state =  { \r\n            posts : [\r\n                {\r\n                id: 0,\r\n                description: \"Zeus\",\r\n                imageLink: \"https://images.unsplash.com/photo-1606155409052-782c35d737eb?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1100&q=80\"                }, {\r\n                id: 1,\r\n                description: \"Snow\",\r\n                imageLink: \"https://images.unsplash.com/photo-1582403609737-a34c5fc4daa6?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1050&q=80\"\r\n                }, {\r\n                id: 2,\r\n                description: \"A sky full of dreams\",\r\n                imageLink: \"https://images.unsplash.com/photo-1605388862319-eaf1649edb5a?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1050&q=80\"  \r\n                }\r\n            ],\r\n        }\r\n    this.removePhoto =  this.removePhoto.bind(this); //this is for event binding\r\n    }\r\n\r\n\r\n    /*to remove a particular photo and update state */\r\n    removePhoto(postRemoved){\r\n        console.log(postRemoved.description);\r\n        this.setState((state) =>( {\r\n            posts: state.posts.filter(post => post !== postRemoved)\r\n        }\r\n        ))\r\n    }\r\n    \r\n    //updates the state for the image uploads \r\n    addPhoto(postSubmitted){\r\n        this.setState(state => ({\r\n            posts: state.posts.concat([postSubmitted])\r\n        })) \r\n    }\r\n\r\n\r\n    //make sure  that  the component did update \r\n    componentDidUpdate(prevProps, prevState){\r\n        console.log(prevState.posts)\r\n        console.log(this.state)\r\n    }\r\n\r\n   \r\n    //render pages \r\n    //exact keyword does an exact match. If we don't specify this then both the pages will render togeether\r\n    render(){ \r\n        return (\r\n            <div>\r\n                <Route exact path = \"/\" render = {() => (\r\n                    <div>\r\n                        <Title title = {\"PhotoGram\"}/>\r\n                        <Photowall posts = {this.state.posts} onRemovePhoto = {this.removePhoto} onNavigate = {this.navigate}/>\r\n                    </div> \r\n                )}/>\r\n                   \r\n                \r\n                <Route path =\"/addPhoto\" render = {({history}) => (\r\n                    <AddPhoto onAddPhoto = {(addedPost) => {\r\n                        this.addPhoto(addedPost)\r\n                        history.push('/')\r\n                    }}/>\r\n                )}/>\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Main","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Main from './Main';\r\nimport './styles/stylesheet.css';\r\nimport {BrowserRouter} from 'react-router-dom'\r\n\r\nReactDOM.render(<BrowserRouter><Main/></BrowserRouter>, document.getElementById('root'));\r\n"],"sourceRoot":""}